= content_tag(:div, id: "question-#{question.id}")
  h1 id="question-title" = question.title
  p id="question-body" = question.body

  - if question.files.attached?
    - question.files.each do |file|
      div id="file-#{file.id}"
        = link_to file.filename.to_s, url_for(file)
        - if current_user&.author_of?(question)
          = link_to 'Delete', attachment_path(file), method: :delete, local: false, remote: true

  - if question.links.any?
    .links
      p Links:
      ul
        - question.links.each do |link|
          div id="link-#{link.id}"
            li
              div
                = link_to link.name, link.url
                - if link.gist?
                  span data-gist-id=link.id
                  javascript:
                    gistClient
                        .setToken("#{ENV['GITHUB_ACCESS_TOKEN']}")
                        .getOneById("#{link.gist_id}")
                        .then(response => {
                            for (const file in response.files) {
                                const current = document.querySelector('[data-gist-id="#{link.id}"]')
                                current.innerText = response.files[file].content
                            }
                        }).catch(err => console.log(err))

              - if current_user&.author_of?(link.linkable)
                = link_to 'Delete', link_path(link), method: :delete, remote: true

  .comments
    - if question.comments.any?
      p Comments:
      = render question.comments

  p = link_to 'Add a comment', '#', class: 'add-comment-question', data: { question_id: question.id }

  = form_with model: [question, Comment.new], local: false, class: 'hidden', html: { id: "comment-question-#{question.id}" } do |f|
    = render 'comments/form', form: f
    = f.submit 'Save'

  = render 'votes/vote', resource: question

  - if current_user&.author_of?(question)
    p = link_to 'Edit', '#', class: 'edit-question', data: { question_id: question.id }
    = link_to 'Delete', question_path(question), id: 'question-delete', method: :delete

    .question-errors
      = render 'shared/errors', resource: question

    = form_with model: question, local: false, class: 'hidden', html: { id: "edit-question-#{question.id}" } do |f|
      = f.label :title, 'Question title'
      = f.text_area :title
      = f.label :body, 'Question body'
      = f.text_area :body
      = f.label :files
      = f.file_field :files, multiple: true
      = render 'links/form', form: f

      = f.submit 'Save'
